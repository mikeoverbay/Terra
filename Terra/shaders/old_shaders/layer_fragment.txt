
uniform sampler2D layer_1;
uniform sampler2D layer_2;
uniform sampler2D layer_3;
uniform sampler2D layer_4;
uniform sampler2D mixtexture;
uniform int layers;
uniform float s1;
uniform float s2;
uniform float s3;
uniform float s4;
uniform float col;
uniform float row;
uniform float tile_width;
uniform int main_layer;
uniform int norm_mix;
varying vec4 VertexPosition;


void main (void)
{
	vec4 t0;
	vec4 t1;
	vec4 t2;
	vec4 t3;
	vec4 mix1;
	vec4 outmix;
	vec2 mix_coords;
	vec2 loc;
	vec3 tc;
	float uv_scale = 10.0;
			vec2 texUV = gl_TexCoord[0].xy;
 
			float adj_scale = uv_scale/tile_width;
			float cell_scale = (256.0/272.0);
			float pad = ( 8.0 / (272.0*tile_width) );
			adj_scale = (adj_scale * cell_scale)/uv_scale;

			loc.xy =  texUV.xy/uv_scale;

			//loc = loc / tile_width; // ok
			loc = loc * adj_scale; // ok
			
			mix_coords.x =  + loc.x-((row)/ tile_width);
			mix_coords.y =  - loc.y-((col+1.0)/ tile_width);
			//mix_coords =  - loc;
			//mix_coords.x = mix_coords.x -((row+1.0)/ tile_width);
			//mix_coords.y = mix_coords.y -((col)/ tile_width);
			mix_coords.x = mix_coords.x - pad;//-(pad/8.0);
			mix_coords.y = mix_coords.y + pad;//+(pad/8.0);

	



			mix1 = texture2D(mixtexture, mix_coords.xy).rgba;


float wrap = 1.0;
//////////
// entire weekend to figure this out!
//----------------------------------------------------------------
vec2 tv;
tv.x = 10.0-gl_TexCoord[0].x + 1.0 / (s4*2) - (s4*.2);
tv.y = 10.0-gl_TexCoord[0].y - 1.0 / (s4*2) - (s4*.2);
 			t3 = texture2D(layer_4,  tv * s4 );

tv.x = 10.0-gl_TexCoord[0].x + 1.0 / (s3 *2) - (s3 *.2);
tv.y = 10.0-gl_TexCoord[0].y - 1.0 / (s3 *2) - (s3 *.2);
			t2 = texture2D(layer_3,  tv * s3 );

tv.x = 10.0-gl_TexCoord[0].x + 1.0 / (s2*2) - (s2*.2);
tv.y = 10.0-gl_TexCoord[0].y - 1.0 / (s2*2) - (s2*.2);
			t1 = texture2D(layer_2, tv * s2 );				

tv.x = 10.0-gl_TexCoord[0].x + 1.0 / (s1*2) - (s1*.2);
tv.y = 10.0-gl_TexCoord[0].y - 1.0 / (s1*2) - (s1*.2);
			t0 = texture2D(layer_1, tv * s1 );
//------------------------------------------------------------------
float c_scale = 0.45; // trial and error... This are best fit values.
float m_scale = 1.2;
if ( norm_mix == 1)
{
// if we are doing the mixed normal map, we dont want to change the levels!
m_scale =0.0;
c_scale = 1.0;
}
					mix1.r *= c_scale;
					mix1.g *= c_scale;
					mix1.b *= c_scale;
					mix1.a *= c_scale;
		if ( main_layer == 1)
			{
				t0 = texture2D(layer_1, gl_TexCoord[0].st/uv_scale);
					mix1.r *= m_scale;
			}
		if ( main_layer == 2)
			{ 			
				t1 = texture2D(layer_2, gl_TexCoord[0].st/uv_scale);
					mix1.g *= m_scale;
			}
		if ( main_layer == 3)
			{ 			
				t2 = texture2D(layer_3, gl_TexCoord[0].st/uv_scale);
					mix1.b *= m_scale;
			}
		if ( main_layer == 4)
			{ 			
				t3 = texture2D(layer_4, gl_TexCoord[0].st/uv_scale);
					mix1.a *= m_scale;
			}
		if (layers == 4)
			{
				outmix = mix(outmix, t3, mix1.a);
				outmix = mix(outmix, t2, mix1.b);
				outmix = mix(outmix, t1, mix1.g);
				outmix = mix(outmix, t0, mix1.r);
			}
		if (layers == 3)
			{
				outmix = mix(outmix, t2, mix1.b);
				outmix = mix(outmix, t1, mix1.g);
				outmix = mix(outmix, t0, mix1.r);
			}
	if (layers == 2)
		{
				outmix = mix(outmix, t1, mix1.g);
				outmix = mix(outmix, t0, mix1.r);
		}
	if (layers == 1)
		{
				outmix = mix(outmix, t0, mix1.r);
		}

	if (texUV.x > 0.0)
		{
		//	outmix.g = 255.0;
		}
	if (texUV.x < -10.0)
		{
		//	outmix.g = 255.0;
		}
if ( norm_mix == 1)
	{
		tc.xyz = outmix.xyz;
		tc = normalize(tc);
		outmix.xyz = tc.xyz;
		// if we are doing the mixed normal map, we dont want to change the levels!
		gl_FragColor = outmix;
		return;
	}


		gl_FragColor = outmix*2.0;
}
